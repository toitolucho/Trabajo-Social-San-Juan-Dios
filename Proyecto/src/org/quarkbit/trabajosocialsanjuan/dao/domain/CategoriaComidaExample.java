package org.quarkbit.trabajosocialsanjuan.dao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CategoriaComidaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public CategoriaComidaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andCodigoCategoriaIsNull() {
            addCriterion("codigo_categoria is null");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaIsNotNull() {
            addCriterion("codigo_categoria is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaEqualTo(Integer value) {
            addCriterion("codigo_categoria =", value, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaNotEqualTo(Integer value) {
            addCriterion("codigo_categoria <>", value, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaGreaterThan(Integer value) {
            addCriterion("codigo_categoria >", value, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaGreaterThanOrEqualTo(Integer value) {
            addCriterion("codigo_categoria >=", value, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaLessThan(Integer value) {
            addCriterion("codigo_categoria <", value, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaLessThanOrEqualTo(Integer value) {
            addCriterion("codigo_categoria <=", value, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaIn(List<Integer> values) {
            addCriterion("codigo_categoria in", values, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaNotIn(List<Integer> values) {
            addCriterion("codigo_categoria not in", values, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaBetween(Integer value1, Integer value2) {
            addCriterion("codigo_categoria between", value1, value2, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andCodigoCategoriaNotBetween(Integer value1, Integer value2) {
            addCriterion("codigo_categoria not between", value1, value2, "codigoCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaIsNull() {
            addCriterion("nombre_categoria is null");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaIsNotNull() {
            addCriterion("nombre_categoria is not null");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaEqualTo(String value) {
            addCriterion("nombre_categoria =", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaNotEqualTo(String value) {
            addCriterion("nombre_categoria <>", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaGreaterThan(String value) {
            addCriterion("nombre_categoria >", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaGreaterThanOrEqualTo(String value) {
            addCriterion("nombre_categoria >=", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaLessThan(String value) {
            addCriterion("nombre_categoria <", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaLessThanOrEqualTo(String value) {
            addCriterion("nombre_categoria <=", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaLike(String value) {
            addCriterion("nombre_categoria like", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaNotLike(String value) {
            addCriterion("nombre_categoria not like", value, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaIn(List<String> values) {
            addCriterion("nombre_categoria in", values, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaNotIn(List<String> values) {
            addCriterion("nombre_categoria not in", values, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaBetween(String value1, String value2) {
            addCriterion("nombre_categoria between", value1, value2, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andNombreCategoriaNotBetween(String value1, String value2) {
            addCriterion("nombre_categoria not between", value1, value2, "nombreCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaIsNull() {
            addCriterion("orden_categoria is null");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaIsNotNull() {
            addCriterion("orden_categoria is not null");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaEqualTo(Integer value) {
            addCriterion("orden_categoria =", value, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaNotEqualTo(Integer value) {
            addCriterion("orden_categoria <>", value, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaGreaterThan(Integer value) {
            addCriterion("orden_categoria >", value, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaGreaterThanOrEqualTo(Integer value) {
            addCriterion("orden_categoria >=", value, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaLessThan(Integer value) {
            addCriterion("orden_categoria <", value, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaLessThanOrEqualTo(Integer value) {
            addCriterion("orden_categoria <=", value, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaIn(List<Integer> values) {
            addCriterion("orden_categoria in", values, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaNotIn(List<Integer> values) {
            addCriterion("orden_categoria not in", values, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaBetween(Integer value1, Integer value2) {
            addCriterion("orden_categoria between", value1, value2, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andOrdenCategoriaNotBetween(Integer value1, Integer value2) {
            addCriterion("orden_categoria not between", value1, value2, "ordenCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaIsNull() {
            addCriterion("estado_categoria is null");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaIsNotNull() {
            addCriterion("estado_categoria is not null");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaEqualTo(String value) {
            addCriterion("estado_categoria =", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaNotEqualTo(String value) {
            addCriterion("estado_categoria <>", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaGreaterThan(String value) {
            addCriterion("estado_categoria >", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaGreaterThanOrEqualTo(String value) {
            addCriterion("estado_categoria >=", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaLessThan(String value) {
            addCriterion("estado_categoria <", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaLessThanOrEqualTo(String value) {
            addCriterion("estado_categoria <=", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaLike(String value) {
            addCriterion("estado_categoria like", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaNotLike(String value) {
            addCriterion("estado_categoria not like", value, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaIn(List<String> values) {
            addCriterion("estado_categoria in", values, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaNotIn(List<String> values) {
            addCriterion("estado_categoria not in", values, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaBetween(String value1, String value2) {
            addCriterion("estado_categoria between", value1, value2, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andEstadoCategoriaNotBetween(String value1, String value2) {
            addCriterion("estado_categoria not between", value1, value2, "estadoCategoria");
            return (Criteria) this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return (Criteria) this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return (Criteria) this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return (Criteria) this;
        }

        public Criteria andHoraInicioIsNull() {
            addCriterion("hora_inicio is null");
            return (Criteria) this;
        }

        public Criteria andHoraInicioIsNotNull() {
            addCriterion("hora_inicio is not null");
            return (Criteria) this;
        }

        public Criteria andHoraInicioEqualTo(Date value) {
            addCriterionForJDBCTime("hora_inicio =", value, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioNotEqualTo(Date value) {
            addCriterionForJDBCTime("hora_inicio <>", value, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioGreaterThan(Date value) {
            addCriterionForJDBCTime("hora_inicio >", value, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("hora_inicio >=", value, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioLessThan(Date value) {
            addCriterionForJDBCTime("hora_inicio <", value, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("hora_inicio <=", value, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioIn(List<Date> values) {
            addCriterionForJDBCTime("hora_inicio in", values, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioNotIn(List<Date> values) {
            addCriterionForJDBCTime("hora_inicio not in", values, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("hora_inicio between", value1, value2, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraInicioNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("hora_inicio not between", value1, value2, "horaInicio");
            return (Criteria) this;
        }

        public Criteria andHoraFinIsNull() {
            addCriterion("hora_fin is null");
            return (Criteria) this;
        }

        public Criteria andHoraFinIsNotNull() {
            addCriterion("hora_fin is not null");
            return (Criteria) this;
        }

        public Criteria andHoraFinEqualTo(Date value) {
            addCriterionForJDBCTime("hora_fin =", value, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinNotEqualTo(Date value) {
            addCriterionForJDBCTime("hora_fin <>", value, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinGreaterThan(Date value) {
            addCriterionForJDBCTime("hora_fin >", value, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("hora_fin >=", value, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinLessThan(Date value) {
            addCriterionForJDBCTime("hora_fin <", value, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("hora_fin <=", value, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinIn(List<Date> values) {
            addCriterionForJDBCTime("hora_fin in", values, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinNotIn(List<Date> values) {
            addCriterionForJDBCTime("hora_fin not in", values, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("hora_fin between", value1, value2, "horaFin");
            return (Criteria) this;
        }

        public Criteria andHoraFinNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("hora_fin not between", value1, value2, "horaFin");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table categorias_comidas
     *
     * @mbggenerated do_not_delete_during_merge Fri Feb 21 14:48:59 BOT 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table categorias_comidas
     *
     * @mbggenerated Fri Feb 21 14:48:59 BOT 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}