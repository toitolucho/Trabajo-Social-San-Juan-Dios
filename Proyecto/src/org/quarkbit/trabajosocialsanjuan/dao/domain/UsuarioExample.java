package org.quarkbit.trabajosocialsanjuan.dao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UsuarioExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public UsuarioExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCodigoUsuarioIsNull() {
            addCriterion("u.codigo_usuario is null");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioIsNotNull() {
            addCriterion("u.codigo_usuario is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioEqualTo(Integer value) {
            addCriterion("u.codigo_usuario =", value, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioNotEqualTo(Integer value) {
            addCriterion("u.codigo_usuario <>", value, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioGreaterThan(Integer value) {
            addCriterion("u.codigo_usuario >", value, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioGreaterThanOrEqualTo(Integer value) {
            addCriterion("u.codigo_usuario >=", value, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioLessThan(Integer value) {
            addCriterion("u.codigo_usuario <", value, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioLessThanOrEqualTo(Integer value) {
            addCriterion("u.codigo_usuario <=", value, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioIn(List<Integer> values) {
            addCriterion("u.codigo_usuario in", values, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioNotIn(List<Integer> values) {
            addCriterion("u.codigo_usuario not in", values, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioBetween(Integer value1, Integer value2) {
            addCriterion("u.codigo_usuario between", value1, value2, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoUsuarioNotBetween(Integer value1, Integer value2) {
            addCriterion("u.codigo_usuario not between", value1, value2, "codigoUsuario");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaIsNull() {
            addCriterion("u.codigo_persona is null");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaIsNotNull() {
            addCriterion("u.codigo_persona is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaEqualTo(Integer value) {
            addCriterion("u.codigo_persona =", value, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaNotEqualTo(Integer value) {
            addCriterion("u.codigo_persona <>", value, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaGreaterThan(Integer value) {
            addCriterion("u.codigo_persona >", value, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaGreaterThanOrEqualTo(Integer value) {
            addCriterion("u.codigo_persona >=", value, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaLessThan(Integer value) {
            addCriterion("u.codigo_persona <", value, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaLessThanOrEqualTo(Integer value) {
            addCriterion("u.codigo_persona <=", value, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaIn(List<Integer> values) {
            addCriterion("u.codigo_persona in", values, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaNotIn(List<Integer> values) {
            addCriterion("u.codigo_persona not in", values, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaBetween(Integer value1, Integer value2) {
            addCriterion("u.codigo_persona between", value1, value2, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andCodigoPersonaNotBetween(Integer value1, Integer value2) {
            addCriterion("u.codigo_persona not between", value1, value2, "codigoPersona");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIsNull() {
            addCriterion("fecha_registro is null");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIsNotNull() {
            addCriterion("fecha_registro is not null");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro =", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro <>", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroGreaterThan(Date value) {
            addCriterionForJDBCDate("fecha_registro >", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro >=", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroLessThan(Date value) {
            addCriterionForJDBCDate("fecha_registro <", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_registro <=", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_registro in", values, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_registro not in", values, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_registro between", value1, value2, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_registro not between", value1, value2, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioIsNull() {
            addCriterion("u.nombre_usuario is null");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioIsNotNull() {
            addCriterion("u.nombre_usuario is not null");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioEqualTo(String value) {
            addCriterion("upper(u.nombre_usuario) =", value.toUpperCase(), "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioNotEqualTo(String value) {
            addCriterion("u.nombre_usuario <>", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioGreaterThan(String value) {
            addCriterion("u.nombre_usuario >", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioGreaterThanOrEqualTo(String value) {
            addCriterion("u.nombre_usuario >=", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioLessThan(String value) {
            addCriterion("u.nombre_usuario <", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioLessThanOrEqualTo(String value) {
            addCriterion("u.nombre_usuario <=", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioLike(String value) {
            addCriterion("u.nombre_usuario like", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioNotLike(String value) {
            addCriterion("u.nombre_usuario not like", value, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioIn(List<String> values) {
            addCriterion("u.nombre_usuario in", values, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioNotIn(List<String> values) {
            addCriterion("u.nombre_usuario not in", values, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioBetween(String value1, String value2) {
            addCriterion("u.nombre_usuario between", value1, value2, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andNombreUsuarioNotBetween(String value1, String value2) {
            addCriterion("u.nombre_usuario not between", value1, value2, "nombreUsuario");
            return (Criteria) this;
        }

        public Criteria andContraseniaIsNull() {
            addCriterion("u.contrasenia is null");
            return (Criteria) this;
        }

        public Criteria andContraseniaIsNotNull() {
            addCriterion("u.contrasenia is not null");
            return (Criteria) this;
        }

        public Criteria andContraseniaEqualTo(String value) {
            addCriterion("u.contrasenia =", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaNotEqualTo(String value) {
            addCriterion("u.contrasenia <>", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaGreaterThan(String value) {
            addCriterion("u.contrasenia >", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaGreaterThanOrEqualTo(String value) {
            addCriterion("u.contrasenia >=", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaLessThan(String value) {
            addCriterion("u.contrasenia <", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaLessThanOrEqualTo(String value) {
            addCriterion("u.contrasenia <=", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaLike(String value) {
            addCriterion("u.contrasenia like", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaNotLike(String value) {
            addCriterion("u.contrasenia not like", value, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaIn(List<String> values) {
            addCriterion("u.contrasenia in", values, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaNotIn(List<String> values) {
            addCriterion("u.contrasenia not in", values, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaBetween(String value1, String value2) {
            addCriterion("u.contrasenia between", value1, value2, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andContraseniaNotBetween(String value1, String value2) {
            addCriterion("u.contrasenia not between", value1, value2, "u.contrasenia");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoIsNull() {
            addCriterion("codigo_tipo is null");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoIsNotNull() {
            addCriterion("codigo_tipo is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoEqualTo(String value) {
            addCriterion("codigo_tipo =", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoNotEqualTo(String value) {
            addCriterion("codigo_tipo <>", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoGreaterThan(String value) {
            addCriterion("codigo_tipo >", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoGreaterThanOrEqualTo(String value) {
            addCriterion("codigo_tipo >=", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoLessThan(String value) {
            addCriterion("codigo_tipo <", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoLessThanOrEqualTo(String value) {
            addCriterion("codigo_tipo <=", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoLike(String value) {
            addCriterion("codigo_tipo like", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoNotLike(String value) {
            addCriterion("codigo_tipo not like", value, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoIn(List<String> values) {
            addCriterion("codigo_tipo in", values, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoNotIn(List<String> values) {
            addCriterion("codigo_tipo not in", values, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoBetween(String value1, String value2) {
            addCriterion("codigo_tipo between", value1, value2, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoTipoNotBetween(String value1, String value2) {
            addCriterion("codigo_tipo not between", value1, value2, "codigoTipo");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionIsNull() {
            addCriterion("codigo_institucion is null");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionIsNotNull() {
            addCriterion("codigo_institucion is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionEqualTo(Integer value) {
            addCriterion("codigo_institucion =", value, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionNotEqualTo(Integer value) {
            addCriterion("codigo_institucion <>", value, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionGreaterThan(Integer value) {
            addCriterion("codigo_institucion >", value, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionGreaterThanOrEqualTo(Integer value) {
            addCriterion("codigo_institucion >=", value, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionLessThan(Integer value) {
            addCriterion("codigo_institucion <", value, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionLessThanOrEqualTo(Integer value) {
            addCriterion("codigo_institucion <=", value, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionIn(List<Integer> values) {
            addCriterion("codigo_institucion in", values, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionNotIn(List<Integer> values) {
            addCriterion("codigo_institucion not in", values, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionBetween(Integer value1, Integer value2) {
            addCriterion("codigo_institucion between", value1, value2, "codigoInstitucion");
            return (Criteria) this;
        }

        public Criteria andCodigoInstitucionNotBetween(Integer value1, Integer value2) {
            addCriterion("codigo_institucion not between", value1, value2, "codigoInstitucion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usuarios
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 11 16:49:30 BOT 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usuarios
     *
     * @mbggenerated Tue Feb 11 16:49:30 BOT 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}